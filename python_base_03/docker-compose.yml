version: "3.9"

secrets:
  mongodb_root_password:
    file: ./secrets/mongodb_root_password
  mongodb_user_password:
    file: ./secrets/mongodb_user_password
  app_secret_key:
    file: ./secrets/app_secret_key
  jwt_secret_key:
    file: ./secrets/jwt_secret_key
  encryption_key:
    file: ./secrets/encryption_key
  redis_password:
    file: ./secrets/redis_password
  stripe_secret_key:
    file: ./secrets/stripe_secret_key

services:
  flask_app:
    build:
      context: .
      dockerfile: Dockerfile
    image: silvella/cr_credit_system_flask_app:latest
    container_name: ${FLASK_SERVICE_NAME}
    environment:
      - PYTHONPATH=${PYTHONPATH}
      - MONGODB_URI=mongodb://${MONGODB_USER}:${MONGODB_PASSWORD}@mongodb:27017/${MONGODB_DB_NAME}?authSource=admin
      - MONGODB_DB_NAME=${MONGODB_DB_NAME}
      - MONGODB_USER=${MONGODB_USER}
      - MONGODB_PASSWORD_FILE=/run/secrets/mongodb_user_password
      - REDIS_HOST=${REDIS_HOST}
      - REDIS_PORT=${REDIS_PORT}
      - REDIS_PASSWORD_FILE=/run/secrets/redis_password
      - APP_SECRET_KEY_FILE=/run/secrets/app_secret_key
      - JWT_SECRET_KEY_FILE=/run/secrets/jwt_secret_key
      - ENCRYPTION_KEY_FILE=/run/secrets/encryption_key
      - STRIPE_SECRET_KEY_FILE=/run/secrets/stripe_secret_key
    ports:
      - "${FLASK_PORT}:${FLASK_PORT}"
    volumes:
      - ./plugins:/app/plugins
      - ./core:/app/core
      - ./static:/app/static
      - ./tools:/app/tools
      - ./utils:/app/utils
    secrets:
      - mongodb_user_password
      - app_secret_key
      - jwt_secret_key
      - encryption_key
      - redis_password
      - stripe_secret_key
    depends_on:
      init-secrets:
        condition: service_completed_successfully
      mongodb:
        condition: service_healthy
      redis:
        condition: service_healthy
    networks:
      - cr_credit_system_network
    command: >
      sh -c "
      pip install --no-cache-dir -r /app/requirements.txt &&
      pip install --no-cache-dir gevent &&
      gunicorn -b 0.0.0.0:${FLASK_PORT} --worker-class gevent app:app
      "
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:${FLASK_PORT}"]
      interval: 10s
      retries: 5
      start_period: 10s

  init-secrets:
    image: alpine
    volumes:
      - app_secrets:/secrets
    command: >
      sh -c "
        [ ! -f /secrets/app_secret_key ] && head -c32 /dev/urandom | xxd -p > /secrets/app_secret_key;
        [ ! -f /secrets/jwt_secret_key ] && head -c32 /dev/urandom | xxd -p > /secrets/jwt_secret_key;
        [ ! -f /secrets/encryption_key ] && head -c32 /dev/urandom | xxd -p > /secrets/encryption_key;
        [ ! -f /secrets/mongodb_root_password ] && head -c32 /dev/urandom | xxd -p > /secrets/mongodb_root_password;
        [ ! -f /secrets/mongodb_user_password ] && head -c32 /dev/urandom | xxd -p > /secrets/mongodb_user_password;
        [ ! -f /secrets/redis_password ] && head -c32 /dev/urandom | xxd -p > /secrets/redis_password;
        chmod 400 /secrets/*
      "

  mongodb:
    image: mongo:latest
    container_name: ${MONGODB_SERVICE_NAME}
    environment:
      - MONGO_INITDB_ROOT_USERNAME=${MONGODB_ROOT_USER}
      - MONGO_INITDB_ROOT_PASSWORD_FILE=/run/secrets/mongodb_root_password
      - MONGO_INITDB_DATABASE=${MONGODB_DB_NAME}
    volumes:
      - cr_credit_system_mongodb_data:/data/db
      - ./init-scripts/mongodb-init.js:/docker-entrypoint-initdb.d/mongodb-init.js:ro
    secrets:
      - mongodb_root_password
    networks:
      - cr_credit_system_network
    healthcheck:
      test: ["CMD", "mongosh", "--eval", "db.adminCommand('ping')"]
      interval: 5s
      timeout: 5s
      retries: 5
      start_period: 10s
    restart: unless-stopped

  redis:
    image: redis:latest
    container_name: ${REDIS_SERVICE_NAME}
    volumes:
      - cr_credit_system_redis_data:/data
      - ./redis.conf:/usr/local/etc/redis/redis.conf.template:ro
    secrets:
      - redis_password
    networks:
      - cr_credit_system_network
    healthcheck:
      test: ["CMD", "redis-cli", "--raw", "incr", "ping"]
      interval: 5s
      retries: 5
      start_period: 10s
    command: >
      sh -c "
        REDIS_PASSWORD=$$(cat /run/secrets/redis_password) && \
        sed \"s/__REDIS_PASSWORD_PLACEHOLDER__/$${REDIS_PASSWORD}/\" /usr/local/etc/redis/redis.conf.template > /tmp/redis.conf && \
        redis-server /tmp/redis.conf
      "

  nginx:
    image: nginx:latest
    container_name: cr_credit_system_nginx
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf:ro
    ports:
      - "8080:80"
    depends_on:
      - flask_app
    networks:
      - cr_credit_system_network

networks:
  cr_credit_system_network:
    name: cr_credit_system_network
    driver: bridge

volumes:
  app_secrets:
    driver: local
  cr_credit_system_redis_data:
    name: cr_credit_system_redis_data
  cr_credit_system_mongodb_data:
    name: cr_credit_system_mongodb_data
