---
- name: Setup Local Persistent Storage (hostPath for development)
  hosts: localhost
  connection: local
  vars:
    flask_namespace: flask-app
    local_data_path: "{{ playbook_dir }}/../../k8s/00_local-dev/data"
  tasks:
    - name: Create local data directories with correct ownership
      shell: |
        # Create directories
        mkdir -p {{ local_data_path }}/mongodb {{ local_data_path }}/redis
        
        # Set ownership for container users
        # MongoDB runs as user 1001, Redis runs as user 999
        sudo chown 1001:1001 {{ local_data_path }}/mongodb
        sudo chown 999:999 {{ local_data_path }}/redis
        
        # Set permissions to allow container access
        chmod 755 {{ local_data_path }}/mongodb {{ local_data_path }}/redis
      changed_when: true

    - name: Get absolute path for local data
      shell: realpath "{{ local_data_path }}"
      register: abs_data_path
      changed_when: false

    - name: Create MongoDB PersistentVolume (hostPath)
      shell: |
        cat <<EOF | kubectl apply -f -
        apiVersion: v1
        kind: PersistentVolume
        metadata:
          name: mongodb-local-pv
          labels:
            type: local
            app: mongodb
        spec:
          storageClassName: local-storage
          capacity:
            storage: 10Gi
          accessModes:
            - ReadWriteOnce
          persistentVolumeReclaimPolicy: Retain
          hostPath:
            path: {{ abs_data_path.stdout }}/mongodb
            type: DirectoryOrCreate
        EOF
      changed_when: true

    - name: Create Redis PersistentVolume (hostPath)
      shell: |
        cat <<EOF | kubectl apply -f -
        apiVersion: v1
        kind: PersistentVolume
        metadata:
          name: redis-local-pv
          labels:
            type: local
            app: redis
        spec:
          storageClassName: local-storage
          capacity:
            storage: 5Gi
          accessModes:
            - ReadWriteOnce
          persistentVolumeReclaimPolicy: Retain
          hostPath:
            path: {{ abs_data_path.stdout }}/redis
            type: DirectoryOrCreate
        EOF
      changed_when: true

    - name: Create MongoDB PersistentVolumeClaim
      shell: |
        cat <<EOF | kubectl apply -f -
        apiVersion: v1
        kind: PersistentVolumeClaim
        metadata:
          name: mongodb-local-pvc
          namespace: {{ flask_namespace }}
        spec:
          storageClassName: local-storage
          accessModes:
            - ReadWriteOnce
          resources:
            requests:
              storage: 10Gi
          selector:
            matchLabels:
              app: mongodb
        EOF
      changed_when: true

    - name: Create Redis PersistentVolumeClaim
      shell: |
        cat <<EOF | kubectl apply -f -
        apiVersion: v1
        kind: PersistentVolumeClaim
        metadata:
          name: redis-local-pvc
          namespace: {{ flask_namespace }}
        spec:
          storageClassName: local-storage
          accessModes:
            - ReadWriteOnce
          resources:
            requests:
              storage: 5Gi
          selector:
            matchLabels:
              app: redis
        EOF
      changed_when: true
        
    - name: Check PVC binding status
      shell: |
        echo "Checking PVC binding status..."
        echo "MongoDB PVC:"
        kubectl get pvc mongodb-local-pvc -n {{ flask_namespace }}
        echo "Redis PVC:"
        kubectl get pvc redis-local-pvc -n {{ flask_namespace }}
      register: pvc_status
      changed_when: false

    - name: Display storage setup status
      debug:
        msg: |
          ✅ Local persistent storage setup completed!
          
          Data Location: {{ abs_data_path.stdout }}
          - MongoDB: {{ abs_data_path.stdout }}/mongodb
          - Redis: {{ abs_data_path.stdout }}/redis
          
          PersistentVolumes:
          - mongodb-local-pv (10Gi)
          - redis-local-pv (5Gi)
          
          PersistentVolumeClaims (in namespace {{ flask_namespace }}):
          - mongodb-local-pvc → mongodb-local-pv
          - redis-local-pvc → redis-local-pv
          
          🎯 Data will persist outside minikube and survive cluster restarts!
          🔍 Access your data: ls -la {{ abs_data_path.stdout }}/ 