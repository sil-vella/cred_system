---
- name: Prepare k8s directories on {{ vm_name }}
  hosts: "{{ vm_name }}_private"
  become: true
  vars:
    k8s_dir: "/home/{{ new_user }}/k8s"
    flask_app_dir: "{{ k8s_dir }}/flask-app"
  tasks:
    - name: Create k8s directory
      file:
        path: "{{ k8s_dir }}"
        state: directory
        mode: '0755'
        owner: "{{ new_user }}"
        group: "{{ new_user }}"

    - name: Create flask-app directory
      file:
        path: "{{ flask_app_dir }}"
        state: directory
        mode: '0755'
        owner: "{{ new_user }}"
        group: "{{ new_user }}"

- name: Mount local k8s directory to {{ vm_name }}
  hosts: localhost
  gather_facts: false
  vars:
    local_k8s_dir: "/Users/sil/Documents/Work/credit_system/app_dev/k8s/flask-app"
    flask_app_dir: "/home/{{ new_user }}/k8s/flask-app"
  tasks:
    - name: Check if directory is already mounted
      shell: mount | grep "{{ flask_app_dir }}" || true
      register: mount_check
      changed_when: false

    - name: Mount local k8s directory
      shell: multipass mount "{{ local_k8s_dir }}" {{ vm_name }}:"{{ flask_app_dir }}"
      when: mount_check.stdout == ""
      register: mount_result
      changed_when: mount_result.rc == 0

    - name: Display mount result
      debug:
        var: mount_result

    - name: Verify mount
      shell: ls -la "{{ flask_app_dir }}"
      register: mount_verify
      changed_when: false

    - name: Display mounted files
      debug:
        var: mount_verify.stdout_lines
        verbosity: 1

    - name: Create .kube directory if it doesn't exist
      file:
        path: "/home/{{ new_user }}/.kube"
        state: directory
        mode: '0700'
        owner: "{{ new_user }}"
        group: "{{ new_user }}"

    - name: Copy k3s kubeconfig
      copy:
        src: /etc/rancher/k3s/k3s.yaml
        dest: "/home/{{ new_user }}/.kube/config"
        remote_src: yes
        mode: '0600'
        owner: "{{ new_user }}"
        group: "{{ new_user }}"
      when: ansible_user != 'root'

    - name: Update kubeconfig server URL
      replace:
        path: "/home/{{ new_user }}/.kube/config"
        regexp: 'https://127.0.0.1:6443'
        replace: 'https://localhost:6443'
      when: ansible_user != 'root'

    - name: Display completion message
      debug:
        msg: |
          Flask k8s directory setup complete:
          - Directory: {{ flask_app_dir }}
          - Owner: {{ new_user }}
          - Permissions: 755
          - Kubeconfig: /home/{{ new_user }}/.kube/config
          - Mount Status: {{ mount_check.stdout }} 